　最適化と機能拡張等の説明です。
　表題の後ろの()内部のシンボル名が、アセンブルスイッチとなっています。

*******************************************************************************

■■■■最適化(by ぷれさべー)■■■■
●16x16タイルのWRAMへの展開による最適化(Enable_WRAMMap)
　最適化効果:大
　副作用　　:大
　追加容量　:大
　競合　　　:Enable_UseTableAtTerrainProc/Enable_ForegroundOmission
　　　　　　 Enable_ForegroundOmissionの効果は内包されています。

　ステージを、16x16単位でワークRAMに展開することで最適化を行います。
　今回の全ての最適化の中で、最も大きな効果、副作用、追加容量をもたらします。
　副作用があまりにきつく、原作と細かい多くの点で変わってしまうので、
　どうしても嫌なら外すことも考えられると思います。
　が、今回の最適化の肝であるので、外すと大きく最適化効果が下がります。

　具体的な副作用を列挙すると……
・ステージ突入時とルーム間スクロール時に読み込み処理が挟まる
　さらに、読み込み時間は移動先のルームの広さに依存する。
（目安としては1画面につき1フレームほどかかる。）
　つまり、画面端っこに触った時、ラグる。最適化という目的に反している。
・通常利用されない、最下段の16x16タイルが判定に利用されるようになる
　壁判定にすれば、画面の一番下に立つことが出来るようになる。
　これはこれで便利になったと言えなくもないが、
　原作のロックマン５では、最下段の16x16タイルが判定でも利用されないことを
　想定とした配置になっている場所がある。
・（閉じた）シャッター専用の16x16タイルが必要になる
　つまり、見かけがシャッターで、判定が壁の16x16タイルが必要になる。
　また、そのタイル番号を、しかるべき場所に設定する必要がある。
・ジャイロマンステージの落下床が、画面外で復活しなくなる
・ストーンマンステージの壊せる壁が、左スクロール以外で復活するようになる
・ワイリーステージ１の壊せる壁が、画面外で復活しなくなる
・閉じるシャッター情報のフォーマットが変わる
・ステージ毎の壊せる壁の種類を表すデータの位置とフォーマットが変わる
・水がどのステージでも使えるようになる(マップ内に存在するときのみ判定)
　ちなみに、前景タイルについても、自動判別して判定を行う。
・１６画面を越える巨大な部屋が作れなくなる
　最初の１６画面でループするようになる。
　この仕様のため、原作のウェーブマンステージは問題なく動作する。

●中爆発１ユニット化による最適化(Enable_MidExp)
　最適化効果:大
　副作用　　:大
　追加容量　:中(バンク16/スプライト定義)

　中爆発(ナパームボムの爆発など)を
　１つのオブジェクトに変更することで最適化を行います。
　最適化の効果は大きめで、中爆発発生時の処理が劇的に軽くなりますが、
　当然、中爆発が存在しないときは何も変わりません。
　消費されるオブジェクト数が少なくなるという利点もあります。
　ただし、中爆発を利用するオブジェクトの仕様が若干変わってしまいます。
　具体的には、判定が長めに滞留するようになってしまいます。
　また、爆発の見かけも完全に元と同じものではありません。

●オーディオレジスタ書き込み最適化(Enable_Misc_WriteAudioReg)
　最適化効果:小(約88[cycle/frame])
　副作用　　:無
　追加容量　:(大)(Enable_WRAMMapが必要だから)
　必要　　　:Enable_WRAMMap

　オーディオ処理を最適化します。テーブルを使った最適化です。
　ゲーム中全てのフレームで最適化効果があります。
　副作用はないので、Enable_WRAMMapを1にしたら、こちらも1にしましょう。

●NMI脱出処理の最適化(Enable_Misc_NMIExit)
　最適化効果:小(約97[cycle/frame])
　副作用　　:無?
　追加容量　:無

　NMI処理を終えるときのルーチンの変更です。
　ゲーム中全てのフレームで最適化効果があります。
　たぶん副作用は無いと思うので、1にすると良いと思います。

●ゲージ描画処理の最適化(p)(Enable_Misc_Gauge)
　最適化効果:中(約205[cycle/frame] / 28目盛りゲージ3本表示時)
　副作用　　:無
　追加容量　:無

　最適化効果はゲージの表示数にもよります。
　ゲームシーンのほとんどのフレームで最適化効果があります。
　後述の(r)の方が効果が高いですが、
　こちらは追加容量がなく、また、値が29以上の時、28で表示されます。

●DMA転送元メモリクリアの最適化(Enable_Misc_ClearDMASrc)
　最適化効果:中(約659[cycle/frame])
　副作用　　:無
　追加容量　:中

　ゲーム中のスプライトメモリのクリア処理をアンローリングして最適化します。
　ゲームシーンのほとんどのフレームで最適化効果があります。

●判定の省略による最適化(Enable_Disable_Collision)
　最適化効果:大
　副作用　　:中?
　追加容量　:中

　ロックマン５では、エフェクトなどとも、こちらの武器と判定を行っています。
　その判定を削除することで最適化を行います。
　エフェクト以外にも、こちらの武器と当たり得ないものの判定を
　個別対応で削除しています。
　敵弾も、ウォーターウェーブやスタークラッシュを装備中以外は
　判定の必要がありませんので判定処理をスキップしています。
　この最適化の範囲はゲーム中の多くのオブジェクトに渡っており、
　あちこちに追加容量を発生させてしまっています。
　また、ひょっとしたらどっかしら対応をミスしている可能性があります。
　副作用というのはそれのことですが、それ以外にも、
　改造するときに、例えば敵弾がこちらの弾を弾くようにする、
　といったことをしたいとき、思い通りにいかなくなるかもしれません。
（改造の幅が狭まる可能性があるという事）
　もしそういったことをしたいなら、
　当該のオブジェクトの最適化だけをはがす手間が必要になります。

●ロックマン武器の判定省略の最適化(Enable_Misc_DisCollRW)
　最適化効果:小
　副作用　　:無+
　追加容量　:無

　ロックマン５は、なぜか、
　ロックマンの武器と、ロックマンの接触判定を
　行わせる事ができるようになっています。
　ロックマンにダメージを与えるロックマンの武器は無いため、
　少し処理をスキップすることで僅かに最適化を行います。
　副作用は基本的にありませんが、
　改造する時に、自爆できる武器を作れなくなってしまいます。


■■■■最適化(by Rock5easily)■■■■
●地形処理の最適化(Enable_UseTableAtTerrainProc)
　最適化効果:中
　副作用　　:無
　追加容量　:中
　競合　　　:Enable_WRAMMap

　オブジェクトと地形の接触判定を、テーブルを使って最適化します。
　副作用は無いため、
　Enable_WRAMMapを使いたくないときはこちらを1にすると良いでしょう。

●Chrバンク切り替えの最適化(Enable_UnrollingSwChrBank)
　最適化効果:小(19[cycle/frame])
　副作用　　:無
　追加容量　:小

　NMI処理中のChrバンク切り替え処理をアンローリングして最適化します。
　効果はそれほどではありませんが、毎フレーム確実に効果があります。

●パレット転送の最適化(Enable_UnrollingPalTransfer)
　最適化効果:中(172[cycle/frame])
　副作用　　:無
　追加容量　:小

　NMI処理中のパレット転送処理をアンローリングして最適化します。
　効果は大きめで、パレットが変更された全てのフレームで最適化効果があります。
　チャージ中など、パレットが変更されるシチュエーションは多いです。

●ゲージ描画処理の最適化(r)(Enable_SetupGaugeSprites)
　最適化効果:中(319[cycle/frame] / 28目盛りゲージ3本表示時)
　副作用　　:無+
　追加容量　:小

　(p)同様ですが効果が高いです。最適化効果はゲージの表示数にもよります。
　ゲームシーンのほとんどのフレームで最適化効果があります。
　副作用は基本的にはありませんが、
　改造などで29以上の値を表示しようとすると表示がおかしくなってしまいます。

●空きスロット走査の最適化(Enable_UnrollingSearchSlot)
　最適化効果:小
　副作用　　:無
　追加容量　:小

　オブジェクトの空きスロットを探す処理をアンローリングして最適化します。
　オブジェクトがなかなか見つからない＝オブジェクトが多い＝重くなりそう
　というときに効果が高くなるという点は大事かもしれません。

●オブジェクトポインタ更新の最適化(Enable_UpdateObjectPointer)
　最適化効果:小(約111[cycle/frame])
　副作用　　:無
　追加容量　:無

　一つのオブジェクトの処理が終了した後、
　次のオブジェクトに処理をバトンタッチするときの処理を最適化します。
　ゲームシーンのほとんどのフレームで最適化効果があります。

●前景タイル判定の省略による最適化(Enable_ForegroundOmission)
　最適化効果:大(約2235[cycle/frame] / 前景タイルが無いときの一例です)
　副作用　　:無+
　追加容量　:小
　競合　　　:Enable_WRAMMap

　ステージ毎に前景タイルの処理を行うかどうか設定し、
　無いときはロックマン近傍の地形の走査を丸ごとスキップします。
　適当な設定を行わないと、前景タイルが働かなくなってしまうのでご注意ください。
　もともとのパッチではプログラム上固定位置に、
　処理を行うかどうかのフラグを設定していたのですが、
　併合する際に位置が不定になってしまっています。

●パッド読み取りの最適化(Enable_JoypadOmission)
　最適化効果:中(約293[cycle/frame])
　副作用　　:無+
　追加容量　:無

　パッド読み取り時、2コンの読み取り行わず、
　また、部分的にアンローリングして最適化します。
　ゲームシーンのほとんどのフレームで最適化効果があります。
　2コンを使って何かしたいという事はできなくなりますが、
　普通はそんなことしないので問題はないでしょう。
（そもそもデフォルトで、パッド読み込みの後に、
　2コンのデータは値00で埋められちゃうんだけど）

●デバッグモード削除の最適化(Enable_DebugModeOmission)
　最適化効果:小
　副作用　　:無
　追加容量　:無

　プログラム上には2コンを使ったデバッグモードの痕跡があります。
　プログラム上通る部分に2コン読み取りを調べる部分があり、
　その部分をスキップすることで最適化を行います。
　副作用も無いので、基本的には1にすると良いでしょう。

●スプライト処理の最適化(Enable_UpdateOAMPointer)
　最適化効果:中(21[cycle/frame] / ロックマンのスプライトセットアップ時)
　副作用　　:無
　追加容量　:無

　スプライトセットアップの処理の最内周を微調整して最適化します。
　この処理は、画面上に多くの敵などが存在するときに多く通り、
　多いときは60回以上行われる処理なので、最適化効果は高くなります。

●オブジェクトの左右移動時の最適化(Enable_ObjMoveLR)
　最適化効果:小
　副作用　　:無
　追加容量　:無

　効果は軽微ですが、副作用も無いので基本的に1にすると良いと思います。

●ロックマンとオブジェクト判定の最適化(Enable_Rock2ObjCollision)
　最適化効果:小
　副作用　　:無
　追加容量　:無

　こちらも効果は小さめですが、副作用は無いため、1にすると良いと思います。

●プログラムバンク切り替えの最適化(Enable_BankSwitch)
　最適化効果:小
　副作用　　:無
　追加容量　:無

　プログラムバンク切り替えの機会は多いため、
　１回では小さな効果でもそれなりの効果が期待できます。
　基本的に1にすると良いと思います。

■■■■機能拡張等(by ぷれさべー)■■■■
●スライディング中にチャージ進行(Enable_SlidingCharge)
　追加容量　:無

　ロックマン５では、スライディング中ロックバスターのチャージが進行しません。
　この項目をOnにすると、他のシリーズのように、
　スライディング中でもチャージが進行するようになります。

●敵無敵処理の調整(Enable_InvincibleTimeType)
　追加容量　:小

　ロックマン５では、ザコにまで無敵時間があります。
　この項目を設定すると、敵の無敵時間の仕様が変わります。
　この項目は、他項目と異なり、0で無効、1,2,3だとそれぞれ異なる効果となります。
　1……ザコの無敵時間がなくなります
　2……ザコの無敵時間中、こちらの攻撃が通り抜けるようになります
　 　　ザコの無敵でこちらの弾が受け止められ無効化されることがなくなり、また、
　 　　無敵時間が切れる最短のタイミングでの撃ち込みがやりやすくなります。
　3……2の効果がボスにまで反映されます

●ラッシュコイル改善(Enable_GoodDog)
　追加容量　:無

　ラッシュコイルが使いやすくなります。

●水中などでスライディングジャンプ(Enable_SlidingJumpInWaterEtc)
　追加容量　:無

　ロックマン５では、水中やハシゴに重なった時や、前景地形の近くにいるとき
　スライディング中のジャンプが不可能です。
　この項目をOnにすると、そういった時でもスライディングジャンプ可能になります。

●被弾によるチャージ消失の無効化(Enable_DisableChargeCancel)
　追加容量　:無

　ロックマン５・６の仕様である、ロックバスターチャージ中に被弾した時の
　チャージ消失を無くします。

●瞬時回復(Enable_QuickRecover)
　追加容量　:無

　ライフエネルギーや武器エネルギーを取った時、１目盛りずつ回復する演出を省き、
　全く硬直せずに一気に回復するようになります。
　演出よりプレイアビリティーを優先する項目です。

●高速フェードイン・フェードアウト(Enable_QuickFade)
　追加容量　:無

　ゲーム中のほぼ全てのシーン（城が崩れるシーンなどは例外）において、
　フェードの速度が上がります。
　これにより、素早く武器を切り替えることが出来るようになります。
　特殊武器をたくさん使ってプレイして欲しい改造を作りたいときにおすすめです。

●分岐時に敵配置オフセットを修正(Enable_FixEnemyOffsetAtWarp)
　追加容量　:小

　ロックマン５には、分岐時に、
「敵がどこまで出現したか」という値を更新しないという仕様があります。
　そのため、分岐後に、分岐前の場所との間に居る敵が一斉に出現し、
　その数が多い時は、分岐後の場所の敵が一切出現しないという問題が生じる他、
　出現する瞬間に働く、制御オブジェクト等が悪さをする可能性があります。
　この項目をOnにすると、分岐時に、
「敵がどこまで出現したか」の値に、分岐後の敵オフセット位置を書き込み、
　以上の問題が生じないようになります。

●プカプッカーワープ修正(Enable_FixPukaPukaWarp)
　追加容量　:小

　プカプッカーという敵にはバグが有り、
　２つのオブジェクトが連動する仕様であるにもかかわらず
　本体が子オブジェクトを作成に失敗した時のエラー処理が省略されており
　結果、ロックマンがワープしてしまうというバグが起きます。
　この項目をOnにすると、子オブジェクトが正しく生成されるまで
　本体が待機するようになります。

●下スクロールバグ修正(Enable_FixDownScrollingGlitch)
　追加容量　:中
　副作用　　:極わずかに重くなります（無視できる程度）

　スーパーアローやラッシュ等を利用し、
　画面の上端ギリギリでスライディングを終えると、ロックマンが画面下端にワープし
　下スクロール可能な場所だとそのままスクロールが始まる(不可能な場所だと死ぬ)
　不具合があります。
　この項目をOnにすると、正しくY座標変化が正しく行われるようになります。

●アロー等の壁抜けの緩和(Enable_FixArrowZipping)
　追加容量　:中
　副作用　　:少し重くなります

　アロー等乗れるものが付近にある状態で、壁を背にスライディング開始すると
　背中の壁によりロックマンが上や下に移動してしまい、
　配置に寄っては壁抜けを開始してしまうバグが起きます。
　この項目をOnにすると、スライディング開始から４フレームの間、かつ、
　乗れるものに触れている時に、ロックマンの上下方向への地形判定にて
　スライディングの状態の判定ではなく、歩行の状態の判定を利用するようにし、
　壁抜けを起こしづらくします。
　壁に張り付いたアローに乗り、壁を背にスライディングを開始した時に
　ロックマンが跳ね上がる不具合も修正されますが、
　仕様変更により別の問題が発生してしまっているかもしれません。

●水上バイクスキップ防止(Enable_FixPWCSkip)
　追加容量　:小

　スーパーアローを並べて配置し、その上でバイクが出現する前から
　スライディングしてギリギリでジャンプすると
　バイクを飛び越えてスキップできてしまいます。
　この項目をOnにすると、バイク出現中スライディングが即時終了するようになり、
　原作の配置だと飛び越えられなくなります。
　ただし、バイク出現後も、着地するまでは操作できてしまうので、
　スライディングせずに飛び越えられてしまうような配置には対応できません。

●反転中梯子を降りる時のもたつき修正(Enable_FixLadderAtAntigravity)
　追加容量　:無し
　副作用　　:ジャンプ上昇中かなり処理負荷が増大します

　グラビティーマンステージ終盤、重力反転中に梯子を上に降りるときに
　右上を入れっぱなしにすると、
　なぜか隣のマスをロックマン降りようとして戻されるを繰り返すという
　おかしな挙動をします。
　この項目をOnにすると、正しく降りてくれるようになります。
　しかし、この項目をOnにすると、ジャンプ上昇中や重力反転中にかなり重くなります。
　この問題は、下降中や地面にいる時は３点の地形を読み込んでいるのに
　上昇中は２点しか読まないことに起因しています。
　この項目をOnにすると、上昇中でも３点読むようになり、結果重くなってしまいます。
　尚、反転中にコンベアに乗った時の動きも改善されるかもしれません。

●トゲをダメージ化等(Enable_NerfedSpike)
　追加容量　:小
　必要　　　:Enable_6BitAttribute

　トゲ(判定F0)を即死ではなく、４段階にダメージを設定できるようになります。
　加えて、原作では未使用である、ダメージ空間(判定E0)のバグを修正した上で、
　こちらも４段階にダメージ量を指定できるようになります。
　さらに、原作では未使用である、ダメージ壁(判定D0)にも同様の効果が及びますが、
　トゲと同じ挙動をするようになるため無意味です。

　16x16タイル属性の、X0,X4,X8,XC(XはD,E,F)それぞれにダメージを設定できます。
　この項目をOnにしてアセンブルしたバイナリから、
　1C 07 04 01を検索すると１件ヒットします。
　これがそのままダメージテーブルになっています。
　ただし、最初の一つは1C(28=即死)にしてください。

　ダメージ空間は扱いが難しく、地面にもダメージ壁(トゲ)を置いておかないと、
　棒立ちした際、ダメージ空間内部でダメージを受けない状態になります。

●スラ終了時天井に引っかかる挙動の修正(Enable_FixAwkwardMoveAfterSlide)
　追加容量　:中
　副作用　　:スライディング中地面が無くなった時のフレームが重くなります

　ジャイロマンステージの前半のコッコの居る足場の下の隙間を
　スライディングし、そのまま右を押し続けると、
　隙間を抜け地面が無くなった場所で、左に引っかかるような動きをします。
　この項目をOnにすると、この引っ掛かりがなくなります。
　グラビティーマンステージの重力反転エリアを
　スライディングで通った時の引っかかりもなくなります。
　地形を読みに行く処理が追加されるので、
　スライディング中地面が無くなった時のフレームが重くなります。

■■■■機能拡張等(by Rock5easily)■■■■
　詳細はRock5easilyさんのページの各ips付属のドキュメントを参照下さい。

●セレクトによるクイック武器切り替え(Enable_WeaponSelect)
　追加容量　:中

　セレクトボタンを用いて武器を切り替えることが可能になります。
　セレクト……順送り
　上＋セレクト……逆送り
　セレクト＋スタート……ロックバスターを装備
　となっております。

●ボス撃破後障害物をジャンプで避け中央に(Enable_BossRoomJump)
　追加容量　:小

　ロックマン５では、８ボスの部屋を「箱型」以外にしてしまうと、
　撃破後、中央に歩いて行く時に問題が生じます。
　このパッチを当てると、起伏をジャンプで避けて中央まで歩くようになります。
　改造のために、ボスの部屋に起伏を付けたい時に必携です。

●16x16タイル属性の拡張(Enable_6BitAttribute)
　追加容量　:中

　16x16タイルの属性の未使用ビットを利用し、属性を拡張します。
　４段階速度のコンベア、滑る床、下からジャンプして乗れる足場を追加します。
　詳細は、Rock5easilyさんの公開している、
　rock5_6bitAttributeのドキュメントを参照してください。
　なお、一部のプログラムは場所が変わっているため、
　ドキュメント通りのアドレスにならないことがあります。

●通常は同居不能の敵を同時表示(Enable_SpriteAutoCoordination)
　追加容量　:中

　ロックマン５はザコ（等）のグラフィックを自動的に選択してくれるという
　素晴らしい機能があります。
　その為、ザコ表示のための設定をしなくても、
　配置するだけで正しく表示することができます。
　しかし、ザコ毎に割り当て先が、２箇所(タイル80-BF及びC0-FF)の
　どちらかに決まっており、同じ割り当て先のザコを２種類置いてしまうと
　点滅表示になったり、酷い時は片方が全く見えなくなってしまいます。
　この項目をOnにすると、割り当て先が被った際、
　もう片方に割り当てようとします。
　この働きにより、大型のザコでなければ任意の２種類のザコを、
　点滅などなく表示（配置）可能になります。
　大型ザコとその他を同時に配置した時の表示の乱れはやや大きくなるので、
　大型ザコは必ず同時に１種類のみ使うように心がけたほうが無難です。

■■■■その他■■■■
●未使用領域の22埋め(FillUnusedSpace22)
　この項目をOnにすると、未使用であるらしいROM領域を22で埋めます。
　22はNesプロセッサの動作を止める非公開命令コードなので、
　間違えてその場所に制御を渡しちゃった時に、直ぐに検出できます。
　他にもプロセッサ停止のコードはありますが、
　22は上位下位の値が同じのため、視認性が良く、
　また、バイナリエディタでタイプしやすいので、22を選びました。
　改造のためにガリガリデータやコードを追加したい方は、
　これをOnにしておくと、目印になるでしょう。

●「16x16タイルのWRAMへの展開による最適化」のためのマップ書き換え(WRAMMap_ModifyMap)
　この項目を、Enable_WRAMMapと共にOnにすると、
　Enable_WRAMMapに合わせて原作のマップを微調整します。
　具体的には、変更される、閉じたシャッターのフォーマットに合わせて
　シャッター情報を書き換え、
　また、16x16タイルを各ステージに閉じたシャッターのために追加します。
　さらに、クリスタルマンステージとストーンマンステージで、
　一番下の16x16タイルが壁であることにより生じる問題を修正します。
　もし、改造のためにこのパッチを当てたいなら、
　こちらだけをOffにするとよいでしょう。
