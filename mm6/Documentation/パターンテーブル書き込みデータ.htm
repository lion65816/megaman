<!DOCTYPE html>
<html lang="ja"><div id="tenten-safe-area-provider" style="all: initial;"></div><script>(function(){class RuffleMimeType{constructor(a,b,c){this.type=a,this.description=b,this.suffixes=c}}class RuffleMimeTypeArray{constructor(a){this.__mimetypes=[],this.__named_mimetypes={};for(let b of a)this.install(b)}install(a){let b=this.__mimetypes.length;this.__mimetypes.push(a),this.__named_mimetypes[a.type]=a,this[a.type]=a,this[b]=a}item(a){return this.__mimetypes[a]}namedItem(a){return this.__named_mimetypes[a]}get length(){return this.__mimetypes.length}}class RufflePlugin extends RuffleMimeTypeArray{constructor(a,b,c,d){super(d),this.name=a,this.description=b,this.filename=c}install(a){a.enabledPlugin||(a.enabledPlugin=this),super.install(a)}}class RufflePluginArray{constructor(a){this.__plugins=[],this.__named_plugins={};for(let b of a)this.install(b)}install(a){let b=this.__plugins.length;this.__plugins.push(a),this.__named_plugins[a.name]=a,this[a.name]=a,this[b]=a}item(a){return this.__plugins[a]}namedItem(a){return this.__named_plugins[a]}get length(){return this.__plugins.length}}const FLASH_PLUGIN=new RufflePlugin("Shockwave Flash","Shockwave Flash 32.0 r0","ruffle.js",[new RuffleMimeType("application/futuresplash","Shockwave Flash","spl"),new RuffleMimeType("application/x-shockwave-flash","Shockwave Flash","swf"),new RuffleMimeType("application/x-shockwave-flash2-preview","Shockwave Flash","swf"),new RuffleMimeType("application/vnd.adobe.flash-movie","Shockwave Flash","swf")]);function install_plugin(a){navigator.plugins.install||Object.defineProperty(navigator,"plugins",{value:new RufflePluginArray(navigator.plugins),writable:!1}),navigator.plugins.install(a),0<a.length&&!navigator.mimeTypes.install&&Object.defineProperty(navigator,"mimeTypes",{value:new RuffleMimeTypeArray(navigator.mimeTypes),writable:!1});for(var b=0;b<a.length;b+=1)navigator.mimeTypes.install(a[b])}install_plugin(FLASH_PLUGIN);})();</script><script src="%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E6%9B%B8%E3%81%8D%E8%BE%BC%E3%81%BF%E3%83%87%E3%83%BC%E3%82%BF_files/ruffle.js"></script><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>パターンテーブル書き込みデータ</title>
</head>

<body>
<p><br></p>
<font size="1">Last Update 08/09/09</font>
<hr>
<pre>◇パターンテーブル書き込みデータ
・$6E010 + 4 * データ番号

4bytesで1組のデータ。
  byte0 -&gt; パターンテーブルに書き込む8x8タイルの個数(01で1個,02で2個,…,FFで255個,00で256個)
  byte1 -&gt; 8x8タイル単位で数えたパターンテーブル書き込み開始位置
  byte2 -&gt; グラフィック読み出しアドレス(bit11-4)
  byte3 -&gt; bit7   = 0ならBG, 1ならスプライト用パターンテーブル書き換え
           bit6-1 = グラフィックを読み出すバンク
           bit0   = グラフィック読み出しアドレス(bit12)

・パターンテーブル書き込み開始の実アドレス = [byte1の値] * $10 + [byte3のbit7の値]*$1000
・ROM内(ヘッダ含)でのグラフィック読み出し開始実アドレス = [byte2の値] * $10 + [byte3の6-0bitの値]*$1000 + $10

・例1 (00 00 00 24)
  256個8x8タイル書き込み
  パターンテーブル書き込み開始の実アドレス = $00 * $10 + 0*$1000 = $0000
  ROM内でのグラフィック読み出し開始実アドレス = $00 * $10 + $24 * 1000 + $10 = $24000

・例2 (60 A0 A0 84)
  $60 = 96個8x8タイル書き込み
  パターンテーブル書き込み開始の実アドレス = $A0 * $10 + 1 * $1000 = $1A00
  ROM内でのグラフィック読み出し開始実アドレス = $A0 * $10 + $04 * $1000 + $10 = $4A10


・ステージ毎のBG用パターンテーブル書き込みデータ番号
$7DF95-7DFA4 (10) = ステージ番号 : データ番号

</pre>



</body><div id="tenten-ja-window" style="all: initial; --left: 268px; --top: 230.10000610351562px; --max-height: 503.8999938964844px;"></div></html>